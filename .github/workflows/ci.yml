name: "CI"

on: [push, pull_request]

env:
  RUBY_VERSION: 3.3.0

jobs:
  linter:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 6

      - name: Get base (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BASE=$(echo ${{ github.event.before }})" >> $GITHUB_ENV

      - name: Get head (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "HEAD=$(echo ${{ github.event.after }})" >> $GITHUB_ENV

      - name: Get base (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BASE=$(echo ${{ github.event.pull_request.base.sha }})" >> $GITHUB_ENV

      - name: Get head (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "HEAD=$(echo ${{ github.event.pull_request.head.sha }})" >> $GITHUB_ENV

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{env.RUBY_VERSION}}
          bundler-cache: true
          cache-version: 1

      - name: Standardrb linter
        run: bundle exec standardrb app/**/*.rb lib/**/*.rb

      - name: Brakeman
        run: bundle exec brakeman --no-summary

      - name: Bundle audit update
        run: bundle exec bundle-audit update

      - name: Bundle audit check
        run: bundle exec bundle-audit check

  test:
    name: Test
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{env.RUBY_VERSION}}
          bundler-cache: true
          cache-version: 1

      - name: Setup PostgresSQL
        run: |
          sudo apt-get -yqq install sqlite3

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-module-

      - name: Prepare database
        run: |
          cd  test/dummy && bin/rails db:prepare

      - name: Precompile assets
        run: |
          cd  test/dummy && bin/rails assets:precompile

      - name: Run all tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/nopassword_test
          RAILS_ENV: test
          RACK_ENV: test
          DISABLE_SPRING: true
        run: |
          bin/rails app:db:reset test
